#!/bin/bash

# WatchHill CLI - Simple commands for git-native handoffs
# Can be called directly or as slash commands from Claude

COMMAND=$1

# Handle slash command format
if [[ "$COMMAND" == /* ]]; then
    COMMAND=${COMMAND:1}  # Remove leading slash
fi

case $COMMAND in
    start|resume|begin)
        .watchhill/bin/start-session.sh
        ;;
    handoff)
        # If additional argument provided, use it as subcommand
        SUBCOMMAND=$2
        case $SUBCOMMAND in
            generate|new|create)
                .watchhill/bin/generate-handoff.sh
                ;;
            open|edit|"")
                # Default to opening existing handoff
                .watchhill/bin/open-handoff.sh
                ;;
            *)
                echo "Unknown handoff subcommand: $SUBCOMMAND"
                echo "Usage: watchhill handoff [generate|open]"
                exit 1
                ;;
        esac
        ;;
    open)
        .watchhill/bin/open-handoff.sh
        ;;
    generate)
        .watchhill/bin/generate-handoff.sh
        ;;
    status)
        EMAIL=$(git config user.email)
        SAFE_USERNAME=$(echo "$EMAIL" | sed 's/@/-at-/g' | sed 's/\./-/g')
        HANDOFF_PATH=".watchhill/sessions/$SAFE_USERNAME/session-handoff.md"
        CONFIG_PATH=".watchhill/config.yml"
        
        if [ -f "$HANDOFF_PATH" ]; then
            # Check git status of handoff
            if git diff --name-only | grep -q "$HANDOFF_PATH"; then
                echo "‚úèÔ∏è  Handoff modified (uncommitted)"
            elif git diff --cached --name-only | grep -q "$HANDOFF_PATH"; then
                echo "üìù Handoff staged for commit"
            else
                echo "‚úÖ Handoff committed"
            fi
            
            # Show last modified time
            if [[ "$OSTYPE" == "darwin"* ]]; then
                MODIFIED=$(stat -f "%Sm" -t "%Y-%m-%d %H:%M" "$HANDOFF_PATH")
            else
                MODIFIED=$(stat -c "%y" "$HANDOFF_PATH" | cut -d' ' -f1,2 | cut -d'.' -f1)
            fi
            echo "üìÖ Last modified: $MODIFIED"
            
            # Show file size with warnings
            SIZE=$(wc -c < "$HANDOFF_PATH")
            SIZE_KB=$((SIZE / 1024))
            
            if [ $SIZE -gt 102400 ]; then
                echo "üö® CRITICAL: Handoff too large: ${SIZE_KB}KB (max: 100KB)"
                echo "   Run './watchhill archive' to start fresh"
            elif [ $SIZE -gt 51200 ]; then
                echo "‚ö†Ô∏è  WARNING: Large handoff: ${SIZE_KB}KB (recommended: <50KB)"
                echo "   Consider archiving soon"
            elif [ $SIZE -gt 30720 ]; then
                echo "üìä Size: ${SIZE_KB}KB (getting large)"
            else
                echo "üìä Size: ${SIZE_KB}KB (healthy)"
            fi
            
            # Count lines
            LINES=$(wc -l < "$HANDOFF_PATH")
            echo "üìù Lines: $LINES"
        else
            echo "‚ùå No handoff found"
        fi
        ;;
    archive)
        EMAIL=$(git config user.email)
        SAFE_USERNAME=$(echo "$EMAIL" | sed 's/@/-at-/g' | sed 's/\./-/g')
        HANDOFF_PATH=".watchhill/sessions/$SAFE_USERNAME/session-handoff.md"
        ARCHIVE_DIR=".watchhill/sessions/$SAFE_USERNAME/archive"
        
        if [ -f "$HANDOFF_PATH" ]; then
            mkdir -p "$ARCHIVE_DIR"
            ARCHIVE_NAME="$(date +%Y-%m-%d-%H%M)-session.md"
            mv "$HANDOFF_PATH" "$ARCHIVE_DIR/$ARCHIVE_NAME"
            echo "üì¶ Archived to: $ARCHIVE_DIR/$ARCHIVE_NAME"
        else
            echo "‚ùå No handoff to archive"
        fi
        ;;
    template)
        TEMPLATE_TYPE=${2:-standard}
        EMAIL=$(git config user.email)
        SAFE_USERNAME=$(echo "$EMAIL" | sed 's/@/-at-/g' | sed 's/\./-/g')
        HANDOFF_PATH=".watchhill/sessions/$SAFE_USERNAME/session-handoff.md"
        TEMPLATE_PATH=".watchhill/templates/$TEMPLATE_TYPE.md"
        
        if [ ! -f "$TEMPLATE_PATH" ]; then
            echo "‚ùå Template '$TEMPLATE_TYPE' not found"
            echo "üìã Available templates:"
            ls -1 .watchhill/templates/ | sed 's/\.md$//' | sed 's/^/   - /'
            exit 1
        fi
        
        # Apply template with variable substitution
        NAME=$(git config user.name)
        DATE=$(date +%Y-%m-%d)
        TIMESTAMP=$(date "+%Y-%m-%d %H:%M")
        BRANCH=$(git branch --show-current)
        
        # Backup existing if present
        if [ -f "$HANDOFF_PATH" ]; then
            cp "$HANDOFF_PATH" "$HANDOFF_PATH.backup"
            echo "üìã Backed up existing handoff"
        fi
        
        # Create from template
        mkdir -p "$(dirname "$HANDOFF_PATH")"
        sed -e "s/{{DATE}}/$DATE/g" \
            -e "s/{{TIMESTAMP}}/$TIMESTAMP/g" \
            -e "s/{{AUTHOR}}/$NAME ($EMAIL)/g" \
            -e "s/{{BRANCH}}/$BRANCH/g" \
            -e "s/{{SESSION_ID}}/$BRANCH/g" \
            -e "s/{{DURATION}}/In Progress/g" \
            "$TEMPLATE_PATH" > "$HANDOFF_PATH"
        
        echo "‚ú® Applied '$TEMPLATE_TYPE' template"
        echo "üìù Handoff ready at: $HANDOFF_PATH"
        ;;
    help|*)
        echo "WatchHill - Git-Native Session Handoffs"
        echo ""
        echo "Commands:"
        echo "  watchhill start             - Load previous session handoff for context"
        echo "  watchhill handoff generate - Generate new handoff from session"
        echo "  watchhill handoff [open]   - Open current handoff in editor"
        echo "  watchhill generate          - Generate new handoff (shortcut)"
        echo "  watchhill status            - Show handoff status"
        echo "  watchhill archive           - Archive current handoff"
        echo "  watchhill template TYPE     - Apply template (bug-fix, feature, refactor, standard)"
        echo "  watchhill help              - Show this help"
        echo ""
        echo "Shortcuts:"
        echo "  watchhill open              - Same as 'handoff open'"
        echo ""
        echo "Slash Commands (for Claude):"
        echo "  /start                      - Load previous session handoff"
        echo "  /handoff                    - Generate and open handoff"
        echo "  /status                     - Check handoff status"
        echo "  /archive                    - Archive current session"
        echo ""
        echo "Templates:"
        echo "  ./watchhill template bug-fix   - Bug investigation template"
        echo "  ./watchhill template feature   - Feature development template"
        echo "  ./watchhill template refactor  - Refactoring template"
        echo "  ./watchhill template           - Default standard template"
        ;;
esac